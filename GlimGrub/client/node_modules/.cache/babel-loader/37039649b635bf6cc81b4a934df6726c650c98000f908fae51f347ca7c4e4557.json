{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './userAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  // const [users, setUsers] = useState(null)\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (ssn, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ssn,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      setUsers(json);\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","ssn","password","response","fetch","method","headers","body","JSON","stringify","json","ok","setUsers","type","payload"],"sources":["/Users/veronicaselenwall/Documents/Plugget 2023/case11/Examensprojekt/GlimCrub/client/src/hooks/useLogin.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useAuthContext } from './userAuthContext';\n\nexport const useLogin = () => {\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    // const [users, setUsers] = useState(null)\n    const { dispatch } = useAuthContext()\n\n    const login = async (ssn, password) => {\n        setIsLoading(true)\n        setError(null)\n\n            const response = await fetch('/api/users/login', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({ssn, password})\n            })\n            const json = await response.json()\n\n            if (!response.ok) {\n                setIsLoading(false)\n                setError(json.error)\n            }\n            if (response.ok) {\n                setUsers(json)\n\n                dispatch({ type: 'LOGIN', payload: json })\n\n                setIsLoading(false)\n            }\n        }\n\n    return { login, isLoading, error }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,mBAAmB;AAElD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD;EACA,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,EAAE;EAErC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,GAAG,EAAEC,QAAQ,KAAK;IACnCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEV,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,GAAG;QAAEC;MAAQ,CAAC;IACxC,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IACA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MACbC,QAAQ,CAACF,IAAI,CAAC;MAEdX,QAAQ,CAAC;QAAEc,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEJ;MAAK,CAAC,CAAC;MAE1CZ,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAEL,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACtC,CAAC;AAAAD,EAAA,CA/BYD,QAAQ;EAAA,QAIID,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}